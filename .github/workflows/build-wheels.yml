on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'      
      
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.9.0
     
      - name: Build wheels
        run: |
           if [ "$RUNNER_OS" == "Linux ]; then
             QUIP_ARCHS=linux_x86_64_gfortran_openmp
           elif ["$RUNNER_OS" == "macOS" ]; then
             QUIP_ARCHS="darwin_x86_64_gfortran_openmp darwin_arm64_gfortran_openmp"
           else
             echo "RUNNER_OS=$RUNNER_OS not supported!"
             exit 1           
           fi
           echo "RUNNER_OS=$RUNNER_OS"
           echo "QUIP_ARCHS=${QUIP_ARCHS}"

           for QUIP_ARCH in $QUIP_ARCHS; do

             case QUIP_ARCH in 

               linux_x86_64_gfortran_openmp)
                 ARCH=auto64
                 ;;

               darwin_x86_64_gfortran_openmp)
                 ARCH=x86_64
                 ;;

               darwin_arm64_gfortran_openmp)
                 ARCH=arm64
                 ;;

             esac

             echo "QUIP_ARCH=${QUIP_ARCH}, ARCHS=${ARCHS}"

             mkdir -p build/${QUIP_ARCH}
             cp quippy/setup.py build/${QUIP_ARCH}
             ./bin/gitversion --hash-only > build/${QUIP_ARCH}/VERSION
             python -m cibuildwheel --output-dir wheelhouse --archs $ARCHS build/${QUIP_ARCH}
           done
        env:
           CIBW_SKIP: cp27-* cp35-* cp36-* pp*
           CIBW_TEST_SKIP: "*-macosx_arm64"
           CIBW_BEFORE_ALL_MACOS: "ln -s $(which gfortran-10) /usr/local/bin/gfortran"
           CIBW_BEFORE_ALL_LINUX: "yum install -y gcc-gfortran"
           CIBW_BEFORE_BUILD: "bash .github/workflows/prepare-build.sh"
           CIBW_TEST_COMMAND: "cd {project}/tests; QUIP_WHEEL_TEST=1 HAVE_GAP=1 python run_all.py -v"
           
      # Uncomment to get SSH access for testing
      - name: Setup tmate session
        if: failure()
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
