on: [push, pull_request, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'      
      
      - uses: actions/setup-python@v2

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.9.0
     
      - name: Build wheels
        run: |
             if [ "$RUNNER_OS" == "Linux" ]; then
                QUIP_ARCHS=linux_x86_64_gfortran_openmp
             elif [ "$RUNNER_OS" == "macOS" ]; then
                QUIP_ARCHS="darwin_x86_64_gfortran_openmp darwin_arm64_gfortran_openmp"
             else
               echo "RUNNER_OS=$RUNNER_OS not supported!"
               exit 1
             fi
             echo "RUNNER_OS=$RUNNER_OS"
             echo "QUIP_ARCHS=${QUIP_ARCHS}"

             for QUIP_ARCH in $QUIP_ARCHS; do
                case $QUIP_ARCH in

                    linux_x86_64_gfortran_openmp)
                      ARCHS=auto64
                      ;;

                    darwin_x86_64_gfortran_openmp)
                      ARCHS=x86_64
                      ;;

                    darwin_arm64_gfortran_openmp)
                      ARCHS=arm64
                      ;;

                esac

                echo "QUIP_ARCH=${QUIP_ARCH}, ARCHS=${ARCHS}"

                if [[ $ARCHS == "arm64" ]]; then
                  # taken from https://github.com/MacPython/gfortran-install/blob/master/gfortran_utils.sh#L97
                  curl -L -O https://github.com/isuruf/gcc/releases/download/gcc-10-arm-20210228/gfortran-darwin-arm64.tar.gz
                  export GFORTRAN_SHA=f26990f6f08e19b2ec150b9da9d59bd0558261dd
                  if [[ "$(shasum gfortran-darwin-arm64.tar.gz)" != "${GFORTRAN_SHA}  gfortran-darwin-arm64.tar.gz" ]]; then
                            echo "shasum mismatch for gfortran-darwin-arm64"
                            exit 1
                  fi
                  sudo mkdir -p /opt/
                  sudo cp "gfortran-darwin-arm64.tar.gz" /opt/gfortran-darwin-arm64.tar.gz
                  pushd /opt
                        sudo tar -xvf gfortran-darwin-arm64.tar.gz
                        sudo rm gfortran-darwin-arm64.tar.gz
                  popd
                  export FC_ARM64="$(find /opt/gfortran-darwin-arm64/bin -name "*-gfortran")"
                  libgfortran="$(find /opt/gfortran-darwin-arm64/lib -name libgfortran.dylib)"
                  libdir=$(dirname $libgfortran)
                  export FC_ARM64_LDFLAGS="-L$libdir -Wl,-rpath,$libdir"
                  export CIBW_ENVIRONMENT="ARCHS=${ARCHS} QUIP_ARCH=${QUIP_ARCH} RUNNER_OS=${RUNNER_OS} FC=$FC_ARM64 F90=$FC_ARM64 F95=$FC_ARM64 F77=$FC_ARM64 LDFLAGS=\"$FC_ARM64_LDFLAGS\" NPY_DISTUTILS_APPEND_FLAGS=1"
                else
                  export CIBW_ENVIRONMENT="ARCHS=${ARCHS} QUIP_ARCH=${QUIP_ARCH} RUNNER_OS=${RUNNER_OS}"
                fi

                mkdir -p build/${QUIP_ARCH}
                cp quippy/setup.py build/${QUIP_ARCH}
                ./bin/gitversion --hash-only > build/${QUIP_ARCH}/VERSION
                echo "CIBW_ENVIRONMENT=$CIBW_ENVIRONMENT"
                python -m cibuildwheel --output-dir wheelhouse --archs $ARCHS build/${QUIP_ARCH}
             done
        env:
           CIBW_SKIP: cp27-* cp35-* cp36-* cp311-* pp*
           CIBW_TEST_SKIP: "*-macosx_arm64"
           CIBW_BEFORE_ALL_MACOS: "[[ ! -f /usr/local/bin/gfortran ]] && ln -s $(which gfortran-10) /usr/local/bin/gfortran || echo skipping linking"
           CIBW_BEFORE_ALL_LINUX: "yum install -y gcc-gfortran"
           CIBW_BEFORE_BUILD: "bash .github/workflows/prepare-wheel-build.sh"
           
      # Uncomment to get SSH access for testing
      - name: Setup tmate session
        if: failure()
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 15

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
