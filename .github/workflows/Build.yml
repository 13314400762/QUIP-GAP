name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the public branch
  push:
    branches: [ public ]
  pull_request:
    branches: [ public ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        arch: [ linux_x86_64_gfortran, linux_x86_64_gfortran_openmp ,
                linux_x86_64_ifort_icc, linux_x86_64_ifort_icc_openmp,
                linux_x86_64_ifort_gcc_openmp ]
        gcc_version: [ 9 ]
        have_gap: [ 0, 1 ]
        include:
          # GCC 10.2 with GAP only
          - arch: linux_x86_64_gfortran_openmp
            have_gap: 1
            gcc_version: 10
        exclude:
          # only keep the version with GAP for the intel compilers
          - arch: [ linux_x86_64_ifort_icc, linux_x86_64_ifort_icc_openmp,
                    linux_x86_64_ifort_gcc_openmp ]
            have_gap: 0


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Install dependencies - GNU
        if: contains( matrix.arch, 'gfortran' )
        env:
          QUIP_ARCH: ${{ matrix.arch }}
          HAVE_GAP: ${{ matrix.have_gap }}
          gcc_version: ${{ matrix.gcc_version }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y  gfortran libblas-dev liblapack-dev \
            openmpi-bin libopenmpi-dev netcdf-bin libnetcdf-dev libhdf5-serial-dev \
            python-numpy

          if [[ "$gcc_version" == 10 ]]; then
              # compilers explicitly pointing to gcc-10

              export F77=gfortran-10
              export F90=gfortran-10
              export F95=gfortran-10
              export CC=gcc-10
              export CPLUSPLUS=g++-10
          fi

      - name: Install INTEL compilers
        if: contains( matrix.arch, 'ifort' )
        run: |
          # add repository to apt
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update

          # install components
          # - Compilers: CXX, Fortran
          # - Maths: MKL
          # - Python: numpy
          # Not installed here: MPI, NetCDF, HDF5 (these are not needed for the current build setup)
          sudo apt-get install --no-install-recommends -o=Dpkg::Use-Pty=0 \
                  intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic \
                  intel-oneapi-compiler-fortran \
                  intel-oneapi-mkl intel-oneapi-mkl-devel \
                  python-numpy

          # set environment variables
          source /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV


      # substitute for make config
      - name: Include Config
        env:
          QUIP_ARCH: ${{ matrix.arch }}
        run: |
          mkdir -p build/${QUIP_ARCH}

          if [[ "$QUIP_ARCH" == *"ifort"* ]]; then
              # Intel config
              cp -v .github/workflows/Makefile.inc.intel build/${QUIP_ARCH}/Makefile.inc
          else
              # GNU configurations - gcc 9 or 10
              if [[ "$gcc_version" == 10 ]]; then
                  cp -v .github/workflows/Makefile.gcc10.inc build/${QUIP_ARCH}/Makefile.inc
              else
                  # gcc-9 is the default one in github actions containers (last checked: 2021 Aug)
                  cp -v .github/workflows/Makefile.inc build/${QUIP_ARCH}/Makefile.inc
              fi
          fi

      - name: Build QUIP
        env:
          QUIP_ARCH: ${{ matrix.arch }}
          HAVE_GAP: ${{ matrix.have_gap }}
        run: |
          make
          make libquip
          make quippy
          make install-quippy

      - name: Test QUIP
        env:
          QUIP_ARCH: ${{ matrix.arch }}
          HAVE_GAP: ${{ matrix.have_gap }}
        run: |
          export QUIP_ROOT=$PWD
          ulimit -n 256
          make test

      - name: Build documentation
        if: matrix.arch == 'linux_x86_64_gfortran' && matrix.have_gap == 1
        run: |
          sudo apt-get install -y libgsl0-dev libxpm-dev pandoc
          pip install sphinx sphinx-rtd-theme nbsphinx numpydoc pygments==2.5.2
          pip install nbconvert[execute] ipython
          cd doc
          make html

      - name: Deploy documentation
        uses: peaceiris/actions-gh-pages@v3
        if: matrix.arch == 'linux_x86_64_gfortran' && matrix.have_gap == 1 && github.ref == 'refs/heads/public'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: doc/_build/html
