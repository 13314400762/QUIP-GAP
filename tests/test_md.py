# HQ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# HQ X
# HQ X   quippy: Python interface to QUIP atomistic simulation library
# HQ X
# HQ X   Copyright James Kermode 2010
# HQ X
# HQ X   These portions of the source code are released under the GNU General
# HQ X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html
# HQ X
# HQ X   If you would like to license the source code under different terms,
# HQ X   please contact James Kermode, james.kermode@gmail.com
# HQ X
# HQ X   When using this software, please cite the following reference:
# HQ X
# HQ X   http://www.jrkermode.co.uk/quippy
# HQ X
# HQ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

from quippy import *
import unittest, quippy
import numpy as np
from quippytest import *

if hasattr(quippy, 'Potential'):

   class TestMD(QuippyTestCase):

      def setUp(self):
         verbosity_push(PRINT_SILENT)
         system_reseed_rng(2065775975)
         s = supercell(diamond(5.44, 14), 2, 2, 2)
         s.set_cutoff(5.0)
         s.calc_connect()

         xml="""
         <SW_params n_types="2" label="PRB_31_plus_H">
         <comment> Stillinger and Weber, Phys. Rev. B  31 p 5262 (1984), extended for other elements </comment>
         <per_type_data type="1" atomic_num="1" />
         <per_type_data type="2" atomic_num="14" />
         <per_pair_data atnum_i="1" atnum_j="1" AA="0.0" BB="0.0"
               p="0" q="0" a="1.0" sigma="1.0" eps="0.0" />
         <per_pair_data atnum_i="1" atnum_j="14" AA="8.581214" BB="0.0327827"
               p="4" q="0" a="1.25" sigma="2.537884" eps="2.1672" />
         <per_pair_data atnum_i="14" atnum_j="14" AA="7.049556277" BB="0.6022245584"
               p="4" q="0" a="1.80" sigma="2.0951" eps="2.1675" />

         <!-- triplet terms: atnum_c is the center atom, neighbours j and k -->
         <per_triplet_data atnum_c="1"  atnum_j="1"  atnum_k="1"
               lambda="21.0" gamma="1.20" eps="2.1675" />
         <per_triplet_data atnum_c="1"  atnum_j="1"  atnum_k="14"
               lambda="21.0" gamma="1.20" eps="2.1675" />
         <per_triplet_data atnum_c="1"  atnum_j="14" atnum_k="14"
               lambda="21.0" gamma="1.20" eps="2.1675" />

         <per_triplet_data atnum_c="14" atnum_j="1"  atnum_k="1"
               lambda="21.0" gamma="1.20" eps="2.1675" />
         <per_triplet_data atnum_c="14" atnum_j="1"  atnum_k="14"
               lambda="21.0" gamma="1.20" eps="2.1675" />
         <per_triplet_data atnum_c="14" atnum_j="14" atnum_k="14"
               lambda="21.0" gamma="1.20" eps="2.1675" />
         </SW_params>
         """

         pot = Potential('IP SW', param_str=xml)

         ds = DynamicalSystem(s)
         ds.rescale_velo(300.0)
         ds.zero_momentum()

         self.al = AtomsList(ds.run(pot, dt=1.0, n_steps=10, save_interval=1))
         list(self.al)
         verbosity_pop()

         self.pos_ref = FortranArray([[ -4.90756835e-02,   4.66045725e-02,  -2.93598574e-02],
                                      [  1.32173045e+00,   1.36049718e+00,   1.34487468e+00],
                                      [  2.74041497e+00,   2.69789402e+00,   3.85251659e-02],
                                      [  4.07785212e+00,   4.04142591e+00,   1.37866232e+00],
                                      [  2.71968477e+00,   4.24600765e-02,   2.68967807e+00],
                                      [  4.05517751e+00,   1.31991363e+00,   4.10060999e+00],
                                      [ -4.35330797e-02,   2.71989350e+00,   2.71199439e+00],
                                      [  1.37658095e+00,   4.06937265e+00,   4.06946087e+00],
                                      [  1.72132477e-02,  -2.22277237e-02,  -5.43278667e+00],
                                      [  1.39841995e+00,   1.39921763e+00,  -4.10832779e+00],
                                      [  2.71204487e+00,   2.72442177e+00,  -5.43041942e+00],
                                      [  4.08018207e+00,   4.07574606e+00,  -4.04670910e+00],
                                      [  2.75045862e+00,   4.05920988e-02,  -2.71053625e+00],
                                      [  4.03933872e+00,   1.32118802e+00,  -1.31575485e+00],
                                      [ -3.93220878e-02,   2.74132724e+00,  -2.71106785e+00],
                                      [  1.36274052e+00,   4.10474780e+00,  -1.38772498e+00],
                                      [  1.39064575e-02,  -5.41205966e+00,   4.58068258e-02],
                                      [  1.31413215e+00,  -4.11238828e+00,   1.35538109e+00],
                                      [  2.70718996e+00,  -2.76738750e+00,  -2.88561697e-02],
                                      [  4.03740665e+00,  -1.34443023e+00,   1.36721177e+00],
                                      [  2.71299198e+00,  -5.40642177e+00,   2.69901486e+00],
                                      [  4.09710220e+00,  -4.06989106e+00,   4.08274310e+00],
                                      [  8.14921889e-03,  -2.69652336e+00,   2.72127967e+00],
                                      [  1.40167927e+00,  -1.33782069e+00,   4.12304545e+00],
                                      [  3.24445499e-02,  -5.39568644e+00,   5.40824620e+00],
                                      [  1.36219648e+00,  -4.04407402e+00,  -4.10536678e+00],
                                      [  2.68518656e+00,  -2.74483674e+00,   5.42609119e+00],
                                      [  4.08996398e+00,  -1.38023798e+00,  -4.06457451e+00],
                                      [  2.71247577e+00,   5.42916617e+00,  -2.75338762e+00],
                                      [  4.09826934e+00,  -4.07990662e+00,  -1.34783454e+00],
                                      [  3.91184688e-02,  -2.70981890e+00,  -2.70338243e+00],
                                      [  1.38522543e+00,  -1.32478272e+00,  -1.32882975e+00],
                                      [  5.41657389e+00,  -1.04870104e-02,  -1.95805978e-02],
                                      [ -4.12171348e+00,   1.38941408e+00,   1.35657486e+00],
                                      [ -2.70023170e+00,   2.69754657e+00,  -9.03938159e-03],
                                      [ -1.37700446e+00,   4.07165725e+00,   1.33380541e+00],
                                      [ -2.71105519e+00,   4.27570116e-03,   2.68145412e+00],
                                      [ -1.33609255e+00,   1.35447728e+00,   4.11940195e+00],
                                      [ -5.39822696e+00,   2.69688247e+00,   2.71832608e+00],
                                      [ -4.09305303e+00,   4.04893322e+00,   4.04892541e+00],
                                      [  5.41666732e+00,  -3.31210270e-02,  -5.39306687e+00],
                                      [ -4.03434810e+00,   1.36796013e+00,  -4.08885532e+00],
                                      [ -2.69776391e+00,   2.74844152e+00,   5.40767808e+00],
                                      [ -1.33348846e+00,   4.03811709e+00,  -4.04664740e+00],
                                      [ -2.70931549e+00,   1.52109639e-03,  -2.75395639e+00],
                                      [ -1.40209690e+00,   1.35995405e+00,  -1.39231274e+00],
                                      [ -5.42696904e+00,   2.75917711e+00,  -2.75388093e+00],
                                      [ -4.04299877e+00,   4.10263245e+00,  -1.37015891e+00],
                                      [  5.41917444e+00,  -5.43705826e+00,  -1.96775103e-02],
                                      [ -4.08809528e+00,  -4.04337082e+00,   1.32919054e+00],
                                      [ -2.69498121e+00,  -2.70618071e+00,   2.93379000e-02],
                                      [ -1.36012829e+00,  -1.32689059e+00,   1.35745179e+00],
                                      [ -2.74733832e+00,   5.40738970e+00,   2.70542061e+00],
                                      [ -1.38098659e+00,  -4.10831978e+00,   4.07428065e+00],
                                      [  5.42529190e+00,  -2.69900127e+00,   2.75015396e+00],
                                      [ -4.10854716e+00,  -1.39523927e+00,   4.12522950e+00],
                                      [  5.43897205e+00,   5.39940518e+00,  -5.42399384e+00],
                                      [ -4.04266510e+00,  -4.10392050e+00,  -4.10237851e+00],
                                      [ -2.68115702e+00,  -2.76821441e+00,  -5.42052929e+00],
                                      [ -1.39819893e+00,  -1.37064434e+00,  -4.03911811e+00],
                                      [ -2.67860219e+00,   5.39639775e+00,  -2.74035180e+00],
                                      [ -1.35799452e+00,  -4.06115043e+00,  -1.32339504e+00],
                                      [ -5.43645969e+00,  -2.68322191e+00,  -2.72114821e+00],
                                      [ -4.09451362e+00,  -1.38333692e+00,  -1.35684711e+00]]).T

         self.force_ref = FortranArray([[ 0.42472538, -0.47643861,  0.12329215],
                                        [-0.02410992,  0.26483845,  0.14907617],
                                        [-0.87104901,  0.39492066, -0.61809651],
                                        [ 0.33401755,  0.63922278,  0.03515869],
                                        [-0.52680366, -0.48051242,  0.4509424 ],
                                        [ 0.6520525 ,  0.65545877, -0.10009976],
                                        [ 0.5168947 ,  0.05570518,  0.16280387],
                                        [-0.26390622,  0.28426618, -0.25576202],
                                        [-0.16478375,  0.21348543,  0.68011024],
                                        [-0.95450254, -0.48307571,  0.83093516],
                                        [ 0.64683218,  0.29357316, -0.35792879],
                                        [-0.2369286 , -0.00420402, -0.77779784],
                                        [-0.55425477, -0.66439332, -0.40675613],
                                        [ 1.11683956,  1.21848362, -0.78549295],
                                        [ 1.08610405, -0.7778054 ,  0.09355339],
                                        [-0.02975854, -0.38528848,  0.87346027],
                                        [-0.58750888, -0.85676056, -1.07212164],
                                        [ 0.80391241,  1.07215215,  0.37103915],
                                        [-0.10178351,  0.49154461,  0.79727726],
                                        [ 0.34264439, -0.51428449, -0.33194906],
                                        [ 0.26870727, -0.59656657,  0.28882599],
                                        [-0.30134423, -0.4276713 ,  0.17952063],
                                        [-0.13037225, -0.04990646,  0.32600994],
                                        [-0.40707083, -0.07146615, -1.09393527],
                                        [-0.44126148, -1.00116629,  0.57432933],
                                        [-0.08654845, -0.55854817,  0.4656977 ],
                                        [ 1.1515351 ,  0.49290221,  0.27840546],
                                        [-0.86748932,  0.04731118, -0.07862846],
                                        [ 0.17786348,  0.76080513,  0.37268035],
                                        [-0.35012986, -0.10118769, -0.9309251 ],
                                        [-0.45735387,  0.19914408,  0.21190713],
                                        [-0.25374033,  0.00829709, -0.42433893],
                                        [ 0.19799873, -0.14737935,  0.56406892],
                                        [ 0.79899931, -0.84144715, -0.58249862],
                                        [-0.68780021,  0.29956344, -0.05689901],
                                        [ 0.12637851,  0.13769522,  0.26284767],
                                        [-0.68270984,  0.15500253,  1.11378095],
                                        [-0.3640883 , -0.25511717, -0.72214753],
                                        [-1.3471695 , -0.09218558,  0.48079557],
                                        [ 0.16633479,  0.41249859,  0.49211301],
                                        [ 0.46188663,  0.48638648, -0.32117258],
                                        [-0.62689517,  0.16924958, -0.34369447],
                                        [-0.06869398, -0.34672366,  0.4521785 ],
                                        [ 0.04576026,  1.04692877, -1.41197597],
                                        [-0.73748526, -0.21380468,  0.80274381],
                                        [ 0.33135713,  0.10464167, -0.02848006],
                                        [ 0.00436236, -1.0772604 ,  1.13149882],
                                        [-0.39395571, -0.37814549,  0.15637965],
                                        [ 0.44168055, -0.3333793 ,  0.46726633],
                                        [-0.22307262, -0.47923665,  0.62772694],
                                        [-0.35106515,  0.2119744 , -0.40463065],
                                        [ 0.35314133, -0.24033673, -0.08184793],
                                        [-0.0144735 ,  0.47328149, -0.28055869],
                                        [ 0.36969608,  0.26916187, -0.53748345],
                                        [-0.00295278, -0.0933932 , -0.6754223 ],
                                        [ 0.8965042 ,  0.5116538 , -0.28979063],
                                        [ 0.08989937,  0.33738025, -0.36421067],
                                        [-0.53295543, -0.05307633,  0.64614062],
                                        [-0.48533076,  0.55153274, -0.26932117],
                                        [ 1.12999798, -0.22505005, -0.61612075],
                                        [-0.02880711,  0.8932608 ,  0.41422386],
                                        [ 0.27185042, -0.33272065, -0.51574923],
                                        [ 0.31026072, -1.20935251, -0.13156741],
                                        [ 0.63991839,  0.61556226, -0.00938632]]).T

      def testpos(self):
	 self.al[-1].set_map_shift()
         self.assertArrayAlmostEqual(self.al[-1].pos+np.dot(self.al[-1].lattice,self.al[-1].map_shift), self.pos_ref)

      def testforce(self):
         self.assertArrayAlmostEqual(self.al[-1].force, self.force_ref)


if __name__ == '__main__':
   unittest.main()



