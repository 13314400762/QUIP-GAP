language: python

dist: trusty

sudo: required

git:
  depth: false

env:
  global:
    secure: "Y5dAhnGQrytV8tJX1oCQMVqAQ2LJIXilFJCgvBMxfaJrs3tORf0gRCKiG7RmUnfWrJtweKkHlXUf4oBWdfg8cCL2rqw3iwun+AV8GY70jd2zUpegv39I5AoLda+BoFaFWYkpdq5jgrFs/DmBgGGZ14dGiIljsAS02MRcGMwxBMg="

python:
  - 3.6

install:

  # setting up the dependencies
  - sudo add-apt-repository -y "ppa:ubuntu-toolchain-r/test";
  - sudo apt-get -yq update;
  - sudo apt-get install -y gfortran liblapack-dev libblas-dev python-numpy libhdf5-serial-dev
  - pip install ase

  # install f90wrap
  - sudo apt-get install -y python-scipy
  - cd src/f90wrap
  - python setup.py install
  - cd ../../

  # Deal with deps (GAP...) --- copied from old verison without if statement
  - echo "Pulling deps";
  - openssl aes-256-cbc -K $encrypted_73ca9e4f056f_key -iv $encrypted_73ca9e4f056f_iv -in tests/travis/get_deps.sh.enc -out get_deps.sh -d;
  - bash get_deps.sh > /dev/null 2>&1

jobs:
  include:
    - stage: Compile Quippy
      install: true
      script:
        
        # TODO: see how much of this is needed in the Makefile and is redundant here
        - export QUIP_ARCH=linux_x86_64_gfortran${PAR+_${PAR}}
        - echo ${QUIP_ARCH}

        # Make the build directory manually for rules
        - mkdir -p build/${QUIP_ARCH}
        # Copy the rules file (rather than make config)
        #- cp tests/rules/${BUILD}_Makefile.${QUIP_ARCH}.inc build/${QUIP_ARCH}/Makefile.inc
        - cp tests/rules/py3_test.inc build/${QUIP_ARCH}/Makefile.inc

        # only install quippy as on the computer

        # Deal with deps (GAP...) --- copied from old verison without if statement
        # - echo "Pulling deps";
        # - openssl aes-256-cbc -K $encrypted_73ca9e4f056f_key -iv $encrypted_73ca9e4f056f_iv -in tests/travis/get_deps.sh.enc -out get_deps.sh -d;
        # - bash get_deps.sh > /dev/null 2>&1
      
        # The actual worik
        - gfortran --version
        - gcc --version
        - g++ --version
        - make quippy > /dev/null

    - stage: Test
      install: true
      script:
        # test if the test run with the result
        - cd tests
        - make
        - cd ../
            
    - stage: docker
      install: skip
      script:
        - docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
        - ln -sf docker/Dockerfile  Dockerfile
        - docker build -t $DOCKER_USERNAME/quip-py3 .
        - docker push $DOCKER_USERNAME/quip-py3        

