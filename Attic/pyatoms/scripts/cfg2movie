#!/bin/sh
# HP XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# HP X
# HP X   pyatoms: atomistic simulations tools
# HP X
# HP X   Copyright James Kermode 2010
# HP X
# HP X   These portions of the source code are released under the GNU General
# HP X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html
# HP X
# HP X   If you would like to license the source code under different terms,
# HP X   please contact James Kermode, james.kermode@gmail.com
# HP X
# HP X   When using this software, please cite the following reference:
# HP X
# HP X   http://www.jrkermode.co.uk/PyAtoms
# HP X
# HP XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Convert a series of cfg files to a movie
# Usage: cfg2movie <AtomEye view script> <Extra command file> <movie file> <cfg file>...

view=$1
extras=$2
movie=$3
cfg0=$4
shift
shift
shift
all_cfgs=$@
index=index

echo Removing old Jpg dir...
rm -rf Jpg

echo Generating comment file...
for i in $all_cfgs
do 
  echo -n $i Jpg/`basename $i .cfg`.jpg
  head -2 $i | tail -1 | cut -c2\-
done > $index

echo Generating AtomEye script
n=0
script_n=1

cp $view scr_movie_${script_n}
cat $extras >> scr_movie_${script_n}

for i in $all_cfgs
do
  echo load_config $i >> scr_movie_${script_n}
  if [[ -e `basename $i .cfg`.clr ]]
      then
      echo load_atom_color `basename $i .cfg`.clr  >> scr_movie_${script_n}
  fi
  echo capture_jpg Jpg/`basename $i .cfg`.jpg  >> scr_movie_${script_n}
  n=$((n+1))
  if ((n >= 1000)); then 
      script_n=$((script_n+1))
      n=0

      cp $view scr_movie_${script_n}
      echo shift_xtal 0 0 >> scr_movie_${script_n}
      cat $extras >> scr_movie_${script_n}
  fi

done

for i in `seq 1 $script_n`; do
    echo quit >> scr_movie_$i
done

echo Running AtomEye...

for i in `seq 1 $script_n`; do
    A -nofep -nowindow -f=scr_movie_$i $cfg0 > /dev/null 2>&1
done

#echo Captioning frames and adding graph...
#graph_caption $index 0 400 0 15.0 Temp x1y1 lines G x1y2 lines


echo Making movie...

## MENCODER

#mencoder "mf://Jpg/*.jpg" -mf fps=15 -o $movie -ovc lavc -lavcopts vcodec=msmpeg4:vhq:vbitrate=15800

## FFMPEG

# Get basename of cfg files
base=`basename $cfg0 .cfg | tr -d 0`
# Count number of zeros in first filename
ndigit=`ls Jpg/*.jpg | head -1 | tr -dc 0 | wc | awk '{print $3}'`
ffmpeg -i Jpg/${base}%0${ndigit}d.jpg -r 25 -b 10M $movie
