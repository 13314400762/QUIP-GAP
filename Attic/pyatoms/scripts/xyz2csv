#!/usr/bin/env python
# HP XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# HP X
# HP X   pyatoms: atomistic simulations tools
# HP X
# HP X   Copyright James Kermode 2010
# HP X
# HP X   These portions of the source code are released under the GNU General
# HP X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html
# HP X
# HP X   If you would like to license the source code under different terms,
# HP X   please contact James Kermode, james.kermode@gmail.com
# HP X
# HP X   When using this software, please cite the following reference:
# HP X
# HP X   http://www.jrkermode.co.uk/PyAtoms
# HP X
# HP XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

import sys
from pyatoms import *

if (len(sys.argv) < 2):
   print 'Usage: xyz2csv <xyz file> [<csv file>]'
   sys.exit(1)

if (len(sys.argv) == 2):
   base, ext = os.path.splitext(sys.argv[1])
   csv = open(base+'.csv', 'w')
else:
   csv = open(sys.argv[2], 'w')

a = Atoms(sys.argv[1])

# Sort by original order
props = sorted(a.properties.keys(),key=lambda k: a.properties[k][0])

a.update_comment(props)
csv.write('element,x,y,z,'+','.join(props[1:])+'\n')

pos = getattr(a,props[0])
if (shape(pos)[1] != 3 or pos.dtype.kind != 'f'):
   raise ValueError('First property must be position like')

format = {}
format['R'] = '%f,'
format['I'] = '%d,'

for i in range(a.n):
   line = '%s,' % a.element[i]

   for key in props:
      count, ptype, cols = a.properties[key]
      if cols.stop-cols.start == 1:   data = getattr(a,key)[i]
      else:                           data = tuple(getattr(a,key)[i])
      line = line + format[ptype]*(cols.stop-cols.start) % data

   csv.write(line[:-1]+'\n')
