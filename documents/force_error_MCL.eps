%!PS-Adobe-2.0 EPSF-2.0
%%Title: force_error_MCL.eps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Mon Feb 22 19:48:33 2010
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [] 0 1 0 DL } def
/LT2 { PL [] 0 0 1 DL } def
/LT3 { PL [] 1 0 1 DL } def
/LT4 { PL [4 dl 2 dl] 1 0 0 DL } def
/LT5 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT6 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT7 { PL [4 dl 2 dl] 1 0 1 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
1.000 UL
LTb
1020 1149 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1149 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.1)]
] -66.7 MRshow
1.000 UL
LTb
1020 1697 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1697 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
1.000 UL
LTb
1020 2246 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2246 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.3)]
] -66.7 MRshow
1.000 UL
LTb
1020 2794 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2794 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
1.000 UL
LTb
1020 3343 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3343 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.5)]
] -66.7 MRshow
1.000 UL
LTb
1020 3891 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3891 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
1.000 UL
LTb
1020 4440 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4440 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0.7)]
] -66.7 MRshow
1.000 UL
LTb
1020 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1020 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
1.000 UL
LTb
1854 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1854 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 1)]
] -66.7 MCshow
1.000 UL
LTb
2689 600 M
0 63 V
0 3777 R
0 -63 V
stroke
2689 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 2)]
] -66.7 MCshow
1.000 UL
LTb
3523 600 M
0 63 V
0 3777 R
0 -63 V
stroke
3523 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 3)]
] -66.7 MCshow
1.000 UL
LTb
4357 600 M
0 63 V
0 3777 R
0 -63 V
stroke
4357 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 4)]
] -66.7 MCshow
1.000 UL
LTb
5191 600 M
0 63 V
0 3777 R
0 -63 V
stroke
5191 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
1.000 UL
LTb
6026 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6026 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 6)]
] -66.7 MCshow
1.000 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6860 400 M
[ [(Helvetica) 200.0 0.0 true true 0 ( 7)]
] -66.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
LTb
200 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 200.0 0.0 true true 0 (force error \(eV/A\))]
] -66.7 MCshow
grestore
LTb
3940 100 M
[ [(Helvetica) 200.0 0.0 true true 0 (buffer size \(A\))]
] -66.7 MCshow
LTb
3940 4740 M
[ [(Helvetica) 200.0 0.0 true true 0 (force error on CH3Cl2- atoms \(ref.: 7 A buffer\))]
] -66.7 MCshow
1.000 UP
1.000 UL
LT0
LTb
5957 4277 M
[ [(Helvetica) 200.0 0.0 true true 0 (Cl-)]
] -66.7 MRshow
LT0
6077 4277 M
543 0 V
1020 1649 M
2086 -22 V
417 222 V
3940 967 L
417 -86 V
417 -45 V
417 -46 V
418 -30 V
417 -51 V
417 -25 V
417 -84 V
1.000 UL
LT4
1020 3078 M
2086 588 V
417 335 V
3940 1934 L
417 -645 V
417 -114 V
417 -10 V
418 -48 V
6026 966 L
6443 850 L
6860 600 L
1.000 UP
1.000 UL
LT0
1020 1536 M
0 226 V
989 1536 M
62 0 V
-62 226 R
62 0 V
3106 1512 M
0 230 V
-31 -230 R
62 0 V
-62 230 R
62 0 V
386 -24 R
0 262 V
-31 -262 R
62 0 V
-62 262 R
62 0 V
3940 924 M
0 86 V
-31 -86 R
62 0 V
-62 86 R
62 0 V
4357 849 M
0 63 V
-31 -63 R
62 0 V
-62 63 R
62 0 V
4774 811 M
0 51 V
-31 -51 R
62 0 V
-62 51 R
62 0 V
386 -92 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
387 -68 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
386 -80 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
386 -47 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
386 -95 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1020 1649 Pls
3106 1627 Pls
3523 1849 Pls
3940 967 Pls
4357 881 Pls
4774 836 Pls
5191 790 Pls
5609 760 Pls
6026 709 Pls
6443 684 Pls
6860 600 Pls
1.000 UL
LT1
LTb
5957 4077 M
[ [(Helvetica) 200.0 0.0 true true 0 (C)]
] -66.7 MRshow
LT1
6077 4077 M
543 0 V
1020 959 M
2086 -1 V
417 -93 V
3940 746 L
417 -25 V
417 -57 V
417 4 V
418 -16 V
417 -24 V
417 15 V
417 -43 V
1.000 UL
LT5
1020 1915 M
3106 1636 L
417 -373 V
417 -138 V
417 -22 V
4774 809 L
417 -7 V
418 -38 V
417 -78 V
417 93 V
6860 600 L
1.000 UP
1.000 UL
LT1
1020 914 M
0 91 V
989 914 M
62 0 V
-62 91 R
62 0 V
3106 920 M
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
3523 835 M
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
3940 728 M
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
386 -56 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
386 -79 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
386 -13 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
387 -30 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
386 -34 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
386 6 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
386 -49 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1020 959 Crs
3106 958 Crs
3523 865 Crs
3940 746 Crs
4357 721 Crs
4774 664 Crs
5191 668 Crs
5609 652 Crs
6026 628 Crs
6443 643 Crs
6860 600 Crs
1.000 UL
LT2
LTb
5957 3877 M
[ [(Helvetica) 200.0 0.0 true true 0 (Cl)]
] -66.7 MRshow
LT2
6077 3877 M
543 0 V
1020 1305 M
2086 41 V
417 18 V
417 -340 V
4357 757 L
417 -69 V
417 -1 V
418 -34 V
417 -3 V
417 -1 V
417 -49 V
1.000 UL
LT6
1020 2315 M
2086 0 V
417 -22 V
417 -586 V
417 -398 V
4774 962 L
417 -66 V
5609 791 L
417 -19 V
417 -20 V
6860 600 L
1.000 UP
1.000 UL
LT2
1020 1224 M
0 163 V
989 1224 M
62 0 V
-62 163 R
62 0 V
3106 1264 M
0 163 V
-31 -163 R
62 0 V
-62 163 R
62 0 V
386 -138 R
0 151 V
-31 -151 R
62 0 V
-62 151 R
62 0 V
3940 983 M
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
4357 734 M
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
4774 676 M
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
386 -25 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
387 -51 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
386 -16 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
386 -12 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
386 -54 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1020 1305 Star
3106 1346 Star
3523 1364 Star
3940 1024 Star
4357 757 Star
4774 688 Star
5191 687 Star
5609 653 Star
6026 650 Star
6443 649 Star
6860 600 Star
1.000 UL
LT3
LTb
5957 3677 M
[ [(Helvetica) 200.0 0.0 true true 0 (H)]
] -66.7 MRshow
LT3
6077 3677 M
543 0 V
1020 1035 M
3106 973 L
3523 754 L
417 -95 V
417 -3 V
417 -8 V
417 -6 V
418 -13 V
417 -10 V
417 -2 V
417 -17 V
1.000 UL
LT7
1020 1901 M
2086 -99 V
417 -488 V
3940 841 L
417 -44 V
417 2 V
417 -38 V
418 -20 V
417 -85 V
417 9 V
417 -65 V
1.000 UP
1.000 UL
LT3
1020 1007 M
0 57 V
-31 -57 R
62 0 V
-62 57 R
62 0 V
3106 949 M
0 48 V
-31 -48 R
62 0 V
-62 48 R
62 0 V
3523 744 M
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
3940 655 M
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
386 -10 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
386 -15 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
386 -12 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
387 -17 R
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
386 -13 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
386 -5 R
0 2 V
-31 -2 R
62 0 V
-62 2 R
62 0 V
386 -18 R
-31 0 R
62 0 V
-62 0 R
62 0 V
1020 1035 Box
3106 973 Box
3523 754 Box
3940 659 Box
4357 656 Box
4774 648 Box
5191 642 Box
5609 629 Box
6026 619 Box
6443 617 Box
6860 600 Box
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
