---
language: python
python:
  - "3.6"

env:
  matrix:
    - QUIP_ARCH=linux_x86_64_gfortran QUIP_INC=Makefile.nogap.inc TRAVIS_GAP=0
    - QUIP_ARCH=linux_x86_64_gfortran QUIP_INC=Makefile.inc TRAVIS_GAP=1
    - QUIP_ARCH=linux_x86_64_gfortran_openmp QUIP_INC=Makefile.nogap.inc TRAVIS_GAP=0
    - QUIP_ARCH=linux_x86_64_gfortran_openmp QUIP_INC=Makefile.inc TRAVIS_GAP=1

stages:
  - test
  - documentation
  - docker

git:
  depth: 10

addons:
  apt:
    update: true
    packages:
      - gfortran
      - libblas-dev
      - liblapack-dev
      - openmpi-bin
      - libopenmpi-dev
      - netcdf-bin
      - libnetcdf-dev
      - libhdf5-serial-dev
      - python-numpy

before_install:
  # Make the build directory manually for rules
  - mkdir -p build/${QUIP_ARCH}
  # Copy the rules file (rather than make config)
  - cp travis/${QUIP_INC} build/${QUIP_ARCH}/Makefile.inc

script: # Compile QUIP, libquip and quippy.
  # Quippy should have built successfully -> start tests
  - make
  - make libquip
  - make quippy
  - make install-quippy

  # Sometimes file limit is 64000 and read_loop reads and writes this many
  # files causing the build to time out
  - ulimit -n 256
  - make test

jobs:
  include:
    - stage: documentation
      env: # serial version of QUIP
        - QUIP_ARCH=linux_x86_64_gfortran QUIP_INC=Makefile.inc TRAVIS_GAP=1

      install: # packages for building docs
        - sudo apt-get install -y
          libgsl0-dev
          libxpm-dev
          pandoc

        - pip install
          f90wrap
          ase
          docutils==0.14
          sphinx
          sphinx-rtd-theme
          nbsphinx
          numpydoc
          pygments==2.5.2

        # needed to nbconvert ipynb files and to process the rst files
        - pip install 'nbconvert[execute]' 'ipython'

        # quippy is working, install it
        - make &> /dev/null
        - make install-quippy &> /dev/null

        # Install atomeye from src
        - export QUIP_ROOT=`pwd`
        - git clone https://github.com/jameskermode/AtomEye.git src/AtomEye
        - cd src/AtomEye/Python
        - python setup.py install
        - cd ../../..

      script:
        - cd doc
        - make html

      deploy:
        provider: pages
        local_dir: doc/_build/html
        skip-cleanup: true
        github-token: $GITHUB_TOKEN # Set in the settings page of your repository, as a secure variable
        keep-history: true
        on:
          branch: public


    - stage: docker
      if: fork = false
      name: "Trigger for building docker images"
      before_install: skip
      install: skip
      script: skip
      deploy:
        provider: script
        script: bash travis/trigger_quip_docker.sh
        on:
          branch: public

  exclude:
    - if: type = pull_request
      env: QUIP_ARCH=linux_x86_64_gfortran QUIP_INC=Makefile.inc TRAVIS_GAP=1
    - if: type = pull_request
      env: QUIP_ARCH=linux_x86_64_gfortran_openmp QUIP_INC=Makefile.inc TRAVIS_GAP=1
    - if: fork = true
      env: QUIP_ARCH=linux_x86_64_gfortran_openmp QUIP_INC=Makefile.inc TRAVIS_GAP=1
    - if: fork = true
      env: QUIP_ARCH=linux_x86_64_gfortran QUIP_INC=Makefile.inc TRAVIS_GAP=1

notifications:
  email:
    - quip-developers@eng.cam.ac.uk


