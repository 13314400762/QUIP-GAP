# HQ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# HQ X
# HQ X   quippy: Python interface to QUIP atomistic simulation library
# HQ X
# HQ X   Copyright James Kermode 2010
# HQ X
# HQ X   These portions of the source code are released under the GNU General
# HQ X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html
# HQ X
# HQ X   If you would like to license the source code under different terms,
# HQ X   please contact James Kermode, james.kermode@gmail.com
# HQ X
# HQ X   When using this software, please cite the following reference:
# HQ X
# HQ X   http://www.jrkermode.co.uk/quippy
# HQ X
# HQ XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

from quippy import _periodictable
from quippy._periodictable import *

__doc__ = _periodictable.__doc__
__all__ = _periodictable.__all__ + ['ElementColours']

ElementName = [s.strip() for s in ElementName]

# Element colours, copied from AtomEye
colours = [
   (0.5,0.5,0.5),
   (0.8,0.8,0.8),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.7,0.7,0.7),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.9,0.4,0),
   (0.35,0.35,0.35),
   (0.2,0.2,0.8),
   (0.8,0.2,0.2),
   (0.7,0.85,0.45),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6,0.6,0.6),
   (0.6,0.6,0.7),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6901960784,0.768627451,0.8705882353),
   (0.1,0.7,0.3),
   (0.95,0.9,0.2),
   (0.15,0.5,0.1),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.5,0.5,0.5),
   (0.8,0.8,0.7),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0,0.8,0),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.5176470588,0.5764705882,0.6529411765),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.257254902,0.2666666667,0.271372549),
   (0.95,0.7900735294,0.01385869565),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.9,0,1),
   (0.6431372549,0.6666666667,0.6784313725),
   (1,1,0.3),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.5,0.08,0.12),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.5,0.1,0.5),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.8,0.8,0),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (1,0.8431372549,0),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.9,0.8,0),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.8,0.2,0.2),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.1,0.7,0.3),
   (0.1,0.3,0.7),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.9,0.8,0),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   (0.6431372549,0.6666666667,0.6784313725),
   ]

ElementColours = dict(zip(ElementName, colours))

# Also include z -> colour
ElementColours.update(dict(zip(range(116), colours)))
del colours
