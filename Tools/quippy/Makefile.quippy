include Makefile.inc
include Makefile.common
ifeq (${QUIP_ARCH},)
  include Makefile.arch
else
  include Makefile.${QUIP_ARCH}
  include ../../build.${QUIP_ARCH}/Makefile.inc
endif

.PHONY: clean build install atomeyelib presetup

ifeq (${QUIPPY_FCOMPILER},)
	@echo
	@echo "You need to set the QUIPPY_FCOMPILER, QUIPPY_F90FLAGS and QUIPPY_CPP variables"
	@echo "Optionally also QUIPPY_OPT"
	@echo
	@exit 1
endif

ifeq (${QUIPPY_PYTHON},)
QUIPPY_PYTHON = python
endif

CONFIG_FC_OPTS = --f90flags="${QUIPPY_F90FLAGS}" --cpp="${QUIPPY_CPP}"
ifneq (${QUIPPY_OPT},)
CONFIG_FC_OPTS += --opt="${QUIPPY_OPT}"
endif
ifneq (${QUIPPY_F77FLAGS},)
CONFIG_FC_OPTS += --f77flags="${QUIPPY_F77FLAGS}"
endif
BUILD_EXT_OPTS = --fcompiler="${QUIPPY_FCOMPILER}"

BUILD_SRC_OPTS = ${LIBATOMS} 
ifeq (${QUIPPY_NO_QUIP},)
BUILD_SRC_OPTS += ${QUIP_CORE} 
ifeq (${QUIPPY_NO_TOOLS},)
BUILD_SRC_OPTS += ${TOOLS} 
endif
endif
BUILD_SRC_OPTS += ${ATOMEYE} ${WRAP} --f2py-opts=--no-wrap-functions

BUILD_OPTS = --build-base=build.${QUIP_ARCH} --debug ${INCLUDES} ${DEFINES} -UHAVE_LOTF ${SYSLIBS} 
ifneq (${QUIPPY_INSTALL_OPTS},)
INSTALL_OPTS += ${QUIPPY_INSTALL_OPTS}
endif

SETUP_OPTS = config_fc ${CONFIG_FC_OPTS} build_ext ${BUILD_EXT_OPTS} build_src ${BUILD_SRC_OPTS}

space = $(empty) $(empty)

LIBATOMS_DIR=../../libAtoms
include ${LIBATOMS_DIR}/Makefile
LIBATOMS=--libatoms-dir=${LIBATOMS_DIR} \
	--libatoms-sources=$(subst $(space),:,$(strip ${LIBATOMS_F77_SOURCES})):$(subst $(space),:,$(strip ${LIBATOMS_F95_SOURCES})):$(subst $(space),:,$(strip ${LIBATOMS_C_SOURCES}))\

QUIP_CORE_DIR=../../QUIP_Core
include ${QUIP_CORE_DIR}/Makefile
QUIP_CORE=--quip-core-dir=${QUIP_CORE_DIR} \
	--quip-core-sources=$(subst $(space),:,$(strip ${TB_F77_SOURCES})):$(subst $(space),:,$(strip ${ALL_F95_FILES}))

TOOLS_DIR=..
include ${TOOLS_DIR}/Makefile
TOOLS_SOURCES=$(addprefix ${TOOLS_DIR}/,$(addsuffix .f95,${PROGRAMS}))
QUIP_UTILS_DIR=../../QUIP_Utils
include ${QUIP_UTILS_DIR}/Makefile
QUIP_UTILS_SOURCES=$(addprefix ${QUIP_UTILS_DIR}/,$(addsuffix .f95,${F95_FILES}))
TOOLS=--tools-sources="${TOOLS_SOURCES} ${QUIP_UTILS_SOURCES} ../../QUIP_Programs/crackparams.f95 ../../QUIP_Programs/cracktools.f95"

WRAP_SOURCES_LIBATOMS=System.f95 ExtendableStr.f95 Units.f95 linearalgebra.f95 Dictionary.f95 Table.f95 PeriodicTable.f95 Atoms.f95  DynamicalSystem.f95  clusters.f95 Structures.f95 libAtoms_misc_utils.f95 CInOutput.f95 Topology.f95
WRAP_SOURCES_QUIP=Potential.f95 MetaPotential.f95 MPI_context.f95
WRAP_SOURCES_TOOLS=elasticity.f95 elastic_fields.f95 cracktools.f95 crackparams.f95
WRAP_SOURCES_LIST=${WRAP_SOURCES_LIBATOMS}
ifeq (${QUIPPY_NO_QUIP},)
WRAP_SOURCES_LIST += ${WRAP_SOURCES_QUIP}
ifeq (${QUIPPY_NO_TOOLS},)
WRAP_SOURCES_LIST += ${WRAP_SOURCES_TOOLS}
endif
endif
WRAP=--wrap-sources="${WRAP_SOURCES_LIST}"


ifeq (${HAVE_ATOMEYE},1)
  ATOMEYE_DIR=../AtomEye
  ATOMEYE=--atomeye-dir=${ATOMEYE_DIR} --atomeye-libs="${ATOMEYE_LIBS}"
atomeyelib:
	make -C ${ATOMEYE_DIR} atomeyelib
else
atomeyelib:
	echo Nothing to be done
endif

presetup:
	./presetup.py

build: atomeyelib presetup
	@echo "QUIP_ROOT=${QUIP_ROOT}"
	${QUIPPY_PYTHON} setup.py ${SETUP_OPTS} build ${BUILD_OPTS}

install: atomeyelib presetup
	${QUIPPY_PYTHON} setup.py ${SETUP_OPTS} build ${BUILD_OPTS} install ${INSTALL_OPTS}

.DEFAULT: 
	${QUIPPY_PYTHON} setup.py ${SETUP_OPTS} $@

clean:
	rm -rf build.${QUIP_ARCH}
