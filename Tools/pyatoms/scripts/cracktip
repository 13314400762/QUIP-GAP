#!/bin/awk -f
# HP XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# HP X
# HP X   pyatoms: atomistic simulations tools
# HP X
# HP X   Copyright James Kermode 2010
# HP X
# HP X   These portions of the source code are released under the GNU General
# HP X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html
# HP X
# HP X   If you would like to license the source code under different terms,
# HP X   please contact James Kermode, james.kermode@gmail.com
# HP X
# HP X   When using this software, please cite the following reference:
# HP X
# HP X   http://www.jrkermode.co.uk/PyAtoms
# HP X
# HP XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# First line of file, assume all frames have same number of atoms
NR == 1 {
  frame_len = $1+2
  frame_n = 0
  r2 = r*r
}

# Comment line - extract crack pos and save comment
NR % frame_len == 2 {
  delete lines
  frame_n = frame_n + 1
  match($0, "CrackPos=([-0-9.]+)", a)
  crack_pos = a[1]
  $0 = gensub(/Properties=([A-Za-z:_0-9]*)/,"Properties=\\1:index:I:1", 1)
  lines[0] = $0
  n = 1
}

# Keep atoms that lie within sphere radius r centred on (crack_pos,0,0)
# Add original atom number as additional aux prop
((NR % frame_len) > 2 || NR % frame_len == 0) && ((($2-crack_pos)*($2-crack_pos) + $3*$3 + $4*$4) < r2) { 
  lines[n++] = $0 " " ((NR % frame_len) -2) 
}

# Last line of frame, write header and selected atom lines
NR % frame_len == 0 {
 print n-1
 for (i=0; i<n; i++) {
   print lines[i]
 }
  printf ("Frame %d, selected %d/%d atoms     \r", frame_n, n-1, frame_len-2) > "/dev/stderr"
}


END {
  printf ("\nDone.\n") > "/dev/stderr"
}
